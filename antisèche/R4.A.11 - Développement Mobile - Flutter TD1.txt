1. Qu'est-ce que Flutter ?
- Framework multi-plateforme par Google (mobile/desktop/web)
- Langage Dart + Moteur C++/Skia
- Avantages : Code unique, performances natives, hot reload

---

2. Installation

Vérifier l'installation
flutter doctor -v

Problèmes courants :
- Erreur 'flutter' non reconnu → Ajouter chemin SDK aux variables d'env
- Erreur Git → Installer Git et vérifier PATH

Extensions VS Code :
- Flutter
- Dart

---

3. Création Projet

Via CLI
flutter create namer_app

Structure :
lib/        → Code Dart
android/    → Config Android
pubspec.yaml → Dépendances

---

4. Dépendances
flutter pub add english_words provider shared_preferences

---

5. Concepts Clés
- Widgets : Briques UI (Stateless/Stateful)
- State Management : ChangeNotifier + Provider
- Hot Reload : Maj instantanée (Ctrl+S)

---

6. Gestion d'État (MyAppState)
class MyAppState extends ChangeNotifier {
  var current = WordPair.random();
  List<WordPair> favorites = [];

  void getNext() {
    current = WordPair.random();
    notifyListeners();
  }

  void toggleFavorite() {
    favorites.contains(current) ? favorites.remove(current) : favorites.add(current);
    notifyListeners();
  }
}

---

7. UI Basics
- Scaffold : Structure de base (AppBar, Body...)
- Column/Row : Layout vertical/horizontal
- StatefulWidget : Pour état local (setState)

Exemple Bouton :
ElevatedButton(
  onPressed: () => appState.getNext(),
  child: Text('Suivant'),
)

---

8. Navigation
BottomNavigationBar :
BottomNavigationBar(
  items: [
    BottomNavigationBarItem(icon: Icon(Icons.home),
    BottomNavigationBarItem(icon: Icon(Icons.favorite)),
  ],
  currentIndex: selectedIndex,
  onTap: (index) => setState(() => selectedIndex = index),
)

NavigationRail (Mode Paysage) :
NavigationRail(
  selectedIndex: selectedIndex,
  onDestinationSelected: (index) => setState(() => selectedIndex = index),
  destinations: [...],
)

---

9. Persistence (SharedPreferences)

Sauvegarde
Future<void> saveFavorites() async {
  final prefs = await SharedPreferences.getInstance();
  await prefs.setString('favorites', jsonEncode(favorites));
}

Chargement
Future<void> loadFavorites() async {
  final prefs = await SharedPreferences.getInstance();
  final data = prefs.getString('favorites');
  if (data != null) favorites = jsonDecode(data);
}

---

10. Bonnes Pratiques
- Extraction Widgets : Ctrl + . → Extract Widget
- Thèmes : Utiliser Theme.of(context) pour couleurs/styles
- Accessibilité : semanticsLabel pour lecteurs d'écran
- Responsive Design : LayoutBuilder + MediaQuery

---

11. Débogage
- Widget Inspector : Analyser l'arbre UI
- Console Debug : Affiche les print()
- Emulateurs : Tester iOS (macOS) / Android (Windows)

---

12. Problèmes Courants
- Erreurs de compilation : Lancer flutter clean
- Hot Reload ne marche pas : Redémarrer l'app
- Écran blanc : Vérifier les erreurs dans la console